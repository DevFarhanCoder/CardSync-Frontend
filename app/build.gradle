/*
 * Copyright 2019 Google Inc.
 *
 * Licensed under the Apache License, Version 2.0 (the "License");
 * you may not use this file except in compliance with the License.
 * You may obtain a copy of the License at
 *
 *      http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */

import groovy.xml.MarkupBuilder

plugins {
    id 'com.android.application'
}

def keystorePropertiesFile = rootProject.file("keystore.properties")
def keystoreProperties = new Properties()
if (keystorePropertiesFile.exists()) {
    keystoreProperties.load(new FileInputStream(keystorePropertiesFile))
}

def twaManifest = [
    applicationId: 'com.instantllycards.www.twa',
    hostName: 'www.instantllycards.com', // The domain being opened in the TWA.
    launchUrl: '/', // The start path for the TWA. Must be relative to the domain.
    name: 'Instantlly-Cards', // The application name.
    launcherName: 'I-Card', // The name shown on the Android Launcher.
    themeColor: '#0EA5E9', // The color used for the status bar.
    themeColorDark: '#000000', // The color used for the dark status bar.
    navigationColor: '#000000', // The color used for the navigation bar.
    navigationColorDark: '#000000', // The color used for the dark navbar.
    navigationDividerColor: '#000000', // The navbar divider color.
    navigationDividerColorDark: '#000000', // The dark navbar divider color.
    backgroundColor: '#FFFFFF', // The color used for the splash screen background.
    enableNotifications: true, // Set to true to enable notification delegation.
    // Every shortcut must include the following fields:
    // - name: String that will show up in the shortcut.
    // - short_name: Shorter string used if |name| is too long.
    // - url: Absolute path of the URL to launch the app with (e.g '/create').
    // - icon: Name of the resource in the drawable folder to use as an icon.
    shortcuts: [],
    // The duration of fade out animation in milliseconds to be played when removing splash screen.
    splashScreenFadeOutDuration: 300,
    generatorApp: 'bubblewrap-cli', // Application that generated the Android Project
    // The fallback strategy for when Trusted Web Activity is not available. Possible values are
    // 'customtabs' and 'webview'.
    fallbackType: 'customtabs',
    enableSiteSettingsShortcut: 'true',
    orientation: 'portrait',
]

android {
    compileSdkVersion 36
    namespace "com.instantllycards.www.twa"

    defaultConfig {
        applicationId "com.instantllycards.www.twa"
        minSdkVersion 21
        targetSdkVersion 35
        versionCode 1   // ðŸš¨ increment this for every upload
        versionName "1.0.0"

        resValue "string", "appName", twaManifest.name
    resValue "string", "launcherName", twaManifest.launcherName
    resValue "string", "launchUrl", "https://${twaManifest.hostName}${twaManifest.launchUrl}"
    resValue "string", "webManifestUrl", "https://www.instantllycards.com/manifest.json"
    resValue "string", "generatorApp", twaManifest.generatorApp
    resValue "string", "hostName", twaManifest.hostName
    resValue "string", "providerAuthority", "${twaManifest.applicationId}.fileprovider"
    resValue "string", "fallbackType", twaManifest.fallbackType
    resValue "string", "orientation", twaManifest.orientation
    resValue "bool", "enableNotification", twaManifest.enableNotifications.toString()
    resValue "color", "colorPrimary", twaManifest.themeColor
    resValue "color", "colorPrimaryDark", twaManifest.themeColorDark
    resValue "color", "navigationColor", twaManifest.navigationColor
    resValue "color", "navigationColorDark", twaManifest.navigationColorDark
    resValue "color", "navigationDividerColor", twaManifest.navigationDividerColor
    resValue "color", "navigationDividerColorDark", twaManifest.navigationDividerColorDark
    resValue "color", "backgroundColor", twaManifest.backgroundColor
    resValue "integer", "splashScreenFadeOutDuration", twaManifest.splashScreenFadeOutDuration.toString()
    }

    signingConfigs {
        release {
            storeFile file(keystoreProperties['storeFile'])
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            signingConfig signingConfigs.release   // âœ… THIS is what was missing
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        debug {
            // keep debug config
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    lintOptions {
        checkReleaseBuilds false
    }
}


task generateShorcutsFile {
    assert twaManifest.shortcuts.size() < 5, "You can have at most 4 shortcuts."
    twaManifest.shortcuts.eachWithIndex { s, i ->
        assert s.name != null, 'Missing `name` in shortcut #' + i
        assert s.short_name != null, 'Missing `short_name` in shortcut #' + i
        assert s.url != null, 'Missing `icon` in shortcut #' + i
        assert s.icon != null, 'Missing `url` in shortcut #' + i
    }

    def shortcutsFile = new File("$projectDir/src/main/res/xml", "shortcuts.xml")

    def xmlWriter = new StringWriter()
    def xmlMarkup = new MarkupBuilder(new IndentPrinter(xmlWriter, "    ", true))

    xmlMarkup
        .'shortcuts'('xmlns:android': 'http://schemas.android.com/apk/res/android') {
            twaManifest.shortcuts.eachWithIndex { s, i ->
                'shortcut'(
                        'android:shortcutId': 'shortcut' + i,
                        'android:enabled': 'true',
                        'android:icon': '@drawable/' + s.icon,
                        'android:shortcutShortLabel': '@string/shortcut_short_name_' + i,
                        'android:shortcutLongLabel': '@string/shortcut_name_' + i) {
                    'intent'(
                            'android:action': 'android.intent.action.MAIN',
                            'android:targetPackage': twaManifest.applicationId,
                            'android:targetClass': twaManifest.applicationId + '.LauncherActivity',
                            'android:data': s.url)
                    'categories'('android:name': 'android.intent.category.LAUNCHER')
                }
            }
        }
    shortcutsFile.text = xmlWriter.toString() + '\n'
}

preBuild.dependsOn(generateShorcutsFile)

repositories {
    
}

dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')
    
        implementation 'com.google.androidbrowserhelper:androidbrowserhelper:2.6.2'
    
}
